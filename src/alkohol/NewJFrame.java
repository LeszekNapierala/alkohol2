package alkohol;

import javax.swing.JOptionPane;

/**
 * @author Leszek
 */
public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jButton9 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Obliczania alkoholu metodą objętościową");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Moc alkoholu etylowego");
        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Poprawka wg. objętości");
        jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Moc pozorna");
        jLabel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("<html>\n<center>Temperatura</center>\n<center>zmierzona</center>\n</html>");
        jLabel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("% vol. w 20ºC");
        jLabel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTextField2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jTextField3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(204, 255, 204));
        jButton2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButton2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jButton2FocusGained(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("<html> <center>Objętość</center> <center>w dm3</center> </html>");
        jLabel9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("<html>\n<center>Temperatura</center>\n<center>w zbiorniku</center>\n</html>");
        jLabel10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("<html> <center>Poprawka</center> <center>tablicowa</center> </html>");
        jLabel11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTextField4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTextField5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButton3.setBackground(new java.awt.Color(204, 255, 204));
        jButton3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("<html>\n<center>Wyliczona</center>\n<center>waga netto</center>\n</html>\n");
        jLabel13.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("<html>\n<center>Wyliczona</center>\n<center>dm3 w 20ºC</center>\n</html>\n");
        jLabel14.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("<html>\n<center>Wyliczona</center>\n<center>dm3 100% vol.</center>\n</html>\n");
        jLabel15.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButton4.setBackground(new java.awt.Color(255, 255, 204));
        jButton4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButton5.setBackground(new java.awt.Color(255, 255, 204));
        jButton5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButton6.setBackground(new java.awt.Color(255, 255, 204));
        jButton6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton9.setBackground(new java.awt.Color(255, 255, 204));
        jButton9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButton1.setBackground(new java.awt.Color(204, 255, 204));
        jButton1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton7.setBackground(new java.awt.Color(204, 255, 204));
        jButton7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Obliczania alkoholu metodą wagową");

        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("Brutto");
        jLabel20.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTextField8.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText("<html> <center>Wyliczona</center> <center>dm3 w 20ºC</center> </html> ");
        jLabel23.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel24.setText("<html> <center>Wyliczona</center> <center>dm3 100% vol.</center> </html> ");
        jLabel24.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("<html> \n<center>Temperatura</center>\n <center>zmierzona</center> \n</html>");
        jLabel17.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Moc alkoholu etylowego");
        jLabel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("Tara");
        jLabel21.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("Wg masy w kg");
        jLabel19.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setText("Netto");
        jLabel22.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Moc pozorna");
        jLabel16.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButton8.setBackground(new java.awt.Color(255, 255, 204));
        jButton8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTextField7.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTextField6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("% vol. w 20ºC");
        jLabel18.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel25.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButton12.setBackground(new java.awt.Color(102, 255, 0));
        jButton12.setText("Oblicz");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton13.setBackground(new java.awt.Color(0, 255, 204));
        jButton13.setText("Wyczyść");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2)
                                .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2)
                                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2)
                                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2)
                                .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(4, 4, 4)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(2, 2, 2)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(2, 2, 2)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(4, 4, 4)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4)
                                .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4)
                                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton13)))))
                .addContainerGap(85, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(2, 2, 2)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton12)
                    .addComponent(jButton13))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jButton10.setBackground(new java.awt.Color(102, 255, 0));
        jButton10.setText("Oblicz");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setBackground(new java.awt.Color(0, 255, 204));
        jButton11.setText("Wyczyść");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton14.setText("o Programie");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(2, 2, 2)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel5)
                                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(2, 2, 2)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(4, 4, 4)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jTextField4)
                                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(2, 2, 2)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel10)
                                            .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(2, 2, 2)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel11)
                                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(4, 4, 4)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(2, 2, 2)
                                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(2, 2, 2)
                                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(2, 2, 2)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(2, 2, 2))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jButton11)
                                            .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 829, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 73, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton14)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jButton14)
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton10)
                    .addComponent(jButton11))
                .addGap(57, 57, 57)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Double readAlcoholPower7c = null;
        Double temperatureRead7c = null;
        String fileName7c = "dane/tablice7c.csv";
        if (jTextField2.getText() != null) {
            try {
                String tmp = jTextField2.getText().trim();
                String tmpPower = null;
                if (tmp.contains(",")) {
                    tmpPower = tmp.replace(",", ".");
                } else {
                    tmpPower = tmp;
                }
                if (tmpPower.matches("[7-9][0-9]\\.[0-9]|10[01]\\.[0-9]|[7-9]\\.[0-9]|10[01]|[7-9][0-9]")) {
                    readAlcoholPower7c = Double.parseDouble(tmpPower);
                } else {
                    jTextField2.setText("");
                    JOptionPane.showMessageDialog(null, "W polu 'mocy pozornej' podaj liczbę z zakresu 70-101,9 z dokładnością do 0,1");
                }
            } catch (NumberFormatException e) {
                jTextField2.setText("");
                JOptionPane.showMessageDialog(null, "Niepoprawna liczba w polu 'mocy pozornej'");
            }
        }
        if (jTextField3.getText() != null) {
            try {
                String tmp = jTextField3.getText().trim();
                String tmpTemp = null;
                if (tmp.contains(",")) {
                    tmpTemp = tmp.replace(",", ".");
                } else {
                    tmpTemp = tmp;
                }
                if (tmpTemp.matches("\\+?30|\\+?[12]?[0-9](\\.[05])?|\\-10(\\.0)?|\\-[0-9](\\.[05])?")) {
                    temperatureRead7c = Double.parseDouble(tmpTemp);
                } else {
                    jTextField3.setText("");
                    JOptionPane.showMessageDialog(null, "W polu 'temperatura zmierzona' podaj liczbę z zakresu -10 do +30 z dokładnością do 0,5");
                }
            } catch (NumberFormatException e) {
                jTextField3.setText("");
                JOptionPane.showMessageDialog(null, "Niepoprawna liczba w polu 'temperatura zmierzona'");
            }
        }
        if ((readAlcoholPower7c != null) && (temperatureRead7c != null)) {
            try {
                AlcoholBoard board7c = new AlcoholBoard(readAlcoholPower7c, temperatureRead7c, fileName7c);
                double score = board7c.vaule;
                jButton2.setText("" + score);

            } catch (Exception e) {
                jButton2.setText("");
                JOptionPane.showMessageDialog(null, "ogólny błąd");
            }
        } else {
            jButton2.setText("");
            JOptionPane.showMessageDialog(null, "Liczba jest wymagana");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButton2FocusGained

    }//GEN-LAST:event_jButton2FocusGained

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        Integer powerMeasuredInteger = null;
        double realPower = 0.0;
        // odczytana objętość w dm3 
        Integer givenVolumeInt = null;
        // tutaj podajemy odczytana temperature alkoholu od -10 do +30 (co 0,5°)   np.17,5
        Double temperatureRead8d = null;
        //volume1000kg - objętość 1000kg alkoholu o wyliczonej mocy w 20°C
        double volume1000kg = 0.0;

        String fileName8d = "dane/tablice8d.csv";
        String fileName9b = "dane/tablice9b.csv";

        // przygotować validacę   
        if (jTextField5.getText() != null) {
            try {
                String tmp = jTextField5.getText().trim();
                String tmpTemp = null;
                if (tmp.contains(",")) {
                    tmpTemp = tmp.replace(",", ".");
                } else {
                    tmpTemp = tmp;
                }
                if (tmpTemp.matches("\\+?30|\\+?[12]?[0-9](\\.[05])?|\\-10(\\.0)?|\\-[0-9](\\.[05])?")) {
                    temperatureRead8d = Double.parseDouble(tmpTemp);
                } else {
                    jTextField5.setText("");
                    JOptionPane.showMessageDialog(null, "W polu 'temperatura zmierzona' podaj liczbę z zakresu -10 do +30 z dokładnością do 0,5");
                }
            } catch (NumberFormatException e) {
                jTextField5.setText("");
                JOptionPane.showMessageDialog(null, "Niepoprawna liczba w polu 'temperatura w zbiorniku'");
            }
        }
        if (jButton2.getText() != null) {
            try {
                // pobieramy moc rzeczywista obliczoną z tablicy 7c i zaokrągloną do całości
                powerMeasuredInteger = (int) Math.round(Double.parseDouble(jButton2.getText()));
                realPower = Double.parseDouble(jButton2.getText()) * 10;
                realPower = Math.round(realPower);
                realPower /= 10;

            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Niepoprawna liczba w polu '% vol. w 20ºC' powinna być w przedziale 80 -100");
            }
        }
        if (jTextField4.getText() != null) {
            try {
                String tmp = jTextField4.getText().trim();
                String tmpVol = null;
                if (tmp.contains(",")) {
                    tmpVol = tmp.replace(",", ".");
                } else {
                    tmpVol = tmp;
                }
                if (tmpVol.matches("\\+?\\d*\\.?\\d*")) {
                    givenVolumeInt = (int) Math.round(Double.parseDouble(tmpVol));
                    if (givenVolumeInt > 0) {
                        jTextField4.setText("" + givenVolumeInt);
                    } else {
                        givenVolumeInt = null;
                        jTextField4.setText("");
                        JOptionPane.showMessageDialog(null, "Niepoprawna liczba w polu 'objętość' podaj liczbę całkowitą wiekszą od 0");
                    }
                } else {
                    jTextField4.setText("");
                    JOptionPane.showMessageDialog(null, "Niepoprawna liczba w polu 'objętość' podaj liczbę całkowitą wiekszą od 0");
                }
            } catch (NumberFormatException e) {
                jTextField4.setText("");
                JOptionPane.showMessageDialog(null, "Niepoprawna liczba w polu 'objętość' podaj liczbe całkowitą wiekszą od 0");
            }
        }
        if ((givenVolumeInt != null) && (powerMeasuredInteger != null) && (temperatureRead8d != null)) {
            try {
                if (powerMeasuredInteger >= 80 && powerMeasuredInteger <= 100) {
                    AlcoholBoard board8d = new AlcoholBoard(powerMeasuredInteger, temperatureRead8d, fileName8d);
                    double correctionTemp = board8d.vaule;
                    double correction = Math.round((correctionTemp - 0.07) * 100);
                    correction /= 100;
                    // score to poprawka tablicowa do obliczeń uzywa sie poprawka-0,07
                    jButton3.setText("" + correctionTemp + " => " + correction);
                    // volumeIn20Degrees => dm3 w 20ºC , po zaokrągleniu do 2-miejsc po przecinku => volumeIn20DegreesView
                    double volumeIn20Degrees = (100 + correction) * givenVolumeInt / 100;
                    double volumeIn20DegreesView = volumeIn20Degrees * 100;
                    volumeIn20DegreesView = Math.round(volumeIn20DegreesView);
                    volumeIn20DegreesView = volumeIn20DegreesView / 100;
                    jButton5.setText("" + volumeIn20DegreesView);
                    //dm3 100% vol.
                    int volumeOf100Percent = (int) Math.round(volumeIn20Degrees * realPower / 100);
                    jButton6.setText("" + volumeOf100Percent);
                    //waga netto    
                    // givenVolumeInt - objętość alkoholu w dm3 zaokrąglona do całości
                    // wartość potrzebna do obliczeń: volume1000kg => Obj. 1000kg alk. w 20ºC na podstawie talicy9b
                    AlcoholBoard board9b = new AlcoholBoard(realPower, 1000, fileName9b);
                    volume1000kg = board9b.vaule;
                    // na postawie (dm3 w 20ºC) i odczytu z tablicy 9b dla 1000kg i realPower  np. 28208 * (1000 / 1106,6) = 25606,39070442992 zaokrąglamy = 25606
                    double netWeight = (100000 / volume1000kg) * volumeOf100Percent;
                    netWeight = Math.round(netWeight);
                    netWeight = netWeight / 100;
                    jButton4.setText("" + netWeight);
                } else {
                    jButton4.setText("");
                    jButton5.setText("");
                    jButton6.setText("");
                    JOptionPane.showMessageDialog(null, "Niepoprawna wartość w polu '% vol. w 20ºC' powinna być w przedziale 80 -100");
                }
            } catch (Exception e) {
                jButton4.setText("");
                jButton5.setText("");
                jButton6.setText("");
                JOptionPane.showMessageDialog(null, "ogólny błąd");
            }
        } else {
            jButton4.setText("");
            jButton5.setText("");
            jButton6.setText("");
            JOptionPane.showMessageDialog(null, "Liczba jest wymagana");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        Double readAlcoholPower7c = null;
        Double temperatureRead7c = null;
        String fileName7c = "dane/tablice7c.csv";
        if (jTextField2.getText() != null) {
            try {
                String tmp = jTextField2.getText().trim();
                String tmpPower = null;
                if (tmp.contains(",")) {
                    tmpPower = tmp.replace(",", ".");
                } else {
                    tmpPower = tmp;
                }
                if (tmpPower.matches("[7-9][0-9]\\.[0-9]|10[01]\\.[0-9]|[7-9]\\.[0-9]|10[01]|[7-9][0-9]")) {
                    readAlcoholPower7c = Double.parseDouble(tmpPower);
                } else {
                    jTextField2.setText("");
                    JOptionPane.showMessageDialog(null, "W polu 'mocy pozornej' podaj liczbę z zakresu 70-101,9 z dokładnością do 0,1");
                }
            } catch (NumberFormatException e) {
                jTextField2.setText("");
                JOptionPane.showMessageDialog(null, "Niepoprawna liczba w polu 'mocy pozornej'");
            }
        }
        if (jTextField3.getText() != null) {
            try {
                String tmp = jTextField3.getText().trim();
                String tmpTemp = null;
                if (tmp.contains(",")) {
                    tmpTemp = tmp.replace(",", ".");
                } else {
                    tmpTemp = tmp;
                }
                if (tmpTemp.matches("\\+?30|\\+?[12]?[0-9](\\.[05])?|\\-10(\\.0)?|\\-[0-9](\\.[05])?")) {
                    temperatureRead7c = Double.parseDouble(tmpTemp);
                } else {
                    jTextField3.setText("");
                    JOptionPane.showMessageDialog(null, "W polu 'temperatura zmierzona' podaj liczbę z zakresu -10 do +30 z dokładnością do 0,5");
                }
            } catch (NumberFormatException e) {
                jTextField3.setText("");
                JOptionPane.showMessageDialog(null, "Niepoprawna liczba w polu 'temperatura zmierzona'");
            }
        }
        if ((readAlcoholPower7c != null) && (temperatureRead7c != null)) {
            try {
                AlcoholBoard board7c = new AlcoholBoard(readAlcoholPower7c, temperatureRead7c, fileName7c);
                double score = board7c.vaule;
                jButton2.setText("" + score);

            } catch (Exception e) {
                jButton2.setText("");
                JOptionPane.showMessageDialog(null, "ogólny błąd");
            }
        } else {
            jButton2.setText("");
            JOptionPane.showMessageDialog(null, "Liczba jest wymagana");
        }
        Integer powerMeasuredInteger = null;
        double realPower = 0.0;
        // odczytana objętość w dm3 
        Integer givenVolumeInt = null;
        // tutaj podajemy odczytana temperature alkoholu od -10 do +30 (co 0,5°)   np.17,5
        Double temperatureRead8d = null;
        //volume1000kg - objętość 1000kg alkoholu o wyliczonej mocy w 20°C
        double volume1000kg = 0.0;

        String fileName8d = "dane/tablice8d.csv";
        String fileName9b = "dane/tablice9b.csv";

        if (jTextField5.getText() != null) {
            try {
                String tmp = jTextField5.getText().trim();
                String tmpTemp = null;
                if (tmp.contains(",")) {
                    tmpTemp = tmp.replace(",", ".");
                } else {
                    tmpTemp = tmp;
                }
                if (tmpTemp.matches("\\+?30|\\+?[12]?[0-9](\\.[05])?|\\-10(\\.0)?|\\-[0-9](\\.[05])?")) {
                    temperatureRead8d = Double.parseDouble(tmpTemp);
                } else {
                    jTextField5.setText("");
                    JOptionPane.showMessageDialog(null, "W polu 'temperatura zmierzona' podaj liczbę z zakresu -10 do +30 z dokładnością do 0,5");
                }
            } catch (NumberFormatException e) {
                jTextField5.setText("");
                JOptionPane.showMessageDialog(null, "Niepoprawna liczba w polu 'temperatura w zbiorniku'");
            }
        }
        if (jButton2.getText() != null) {
            try {
                // pobieramy moc rzeczywista obliczoną z tablicy 7c i zaokrągloną do całości
                powerMeasuredInteger = (int) Math.round(Double.parseDouble(jButton2.getText()));
                realPower = Double.parseDouble(jButton2.getText()) * 10;
                realPower = Math.round(realPower);
                realPower /= 10;

            } catch (NumberFormatException e) {
                jButton2.setText("");
                JOptionPane.showMessageDialog(null, "Niepoprawna liczba w polu '% vol. w 20ºC' powinna być w przedziale 80 -100");
            }
        }
        if (jTextField4.getText() != null) {
            try {
                String tmp = jTextField4.getText().trim();
                String tmpVol = null;
                if (tmp.contains(",")) {
                    tmpVol = tmp.replace(",", ".");
                } else {
                    tmpVol = tmp;
                }
                if (tmpVol.matches("\\+?\\d*\\.?\\d*")) {
                    givenVolumeInt = (int) Math.round(Double.parseDouble(tmpVol));
                    if (givenVolumeInt > 0) {
                        jTextField4.setText("" + givenVolumeInt);
                    } else {
                        givenVolumeInt = null;
                        jTextField4.setText("");
                        JOptionPane.showMessageDialog(null, "Niepoprawna liczba w polu 'objętość' podaj liczbę całkowitą wiekszą od 0");
                    }
                } else {
                    jTextField4.setText("");
                    JOptionPane.showMessageDialog(null, "Niepoprawna liczba w polu 'objętość' podaj liczbę całkowitą wiekszą od 0");
                }
            } catch (NumberFormatException e) {
                jTextField4.setText("");
                JOptionPane.showMessageDialog(null, "Niepoprawna liczba w polu 'objętość' podaj liczbe całkowitą wiekszą od 0");
            }
        }
        if ((givenVolumeInt != null) && (powerMeasuredInteger != null) && (temperatureRead8d != null)) {
            try {
                if (powerMeasuredInteger >= 80 && powerMeasuredInteger <= 100) {
                    AlcoholBoard board8d = new AlcoholBoard(powerMeasuredInteger, temperatureRead8d, fileName8d);
                    double correctionTemp = board8d.vaule;
                    double correction = Math.round((correctionTemp - 0.07) * 100);
                    correction /= 100;
                    // score to poprawka tablicowa do obliczeń uzywa sie poprawka-0,07
                    jButton3.setText("" + correctionTemp + " -> " + correction);
                    // volumeIn20Degrees => dm3 w 20ºC , po zaokrągleniu do 2-miejsc po przecinku => volumeIn20DegreesView
                    double volumeIn20Degrees = (100 + correction) * givenVolumeInt / 100;
                    double volumeIn20DegreesView = volumeIn20Degrees * 100;
                    volumeIn20DegreesView = Math.round(volumeIn20DegreesView);
                    volumeIn20DegreesView = volumeIn20DegreesView / 100;
                    jButton5.setText("" + volumeIn20DegreesView);
                    //dm3 100% vol.
                    int volumeOf100Percent = (int) Math.round(volumeIn20Degrees * realPower / 100);
                    jButton6.setText("" + volumeOf100Percent);
                    //waga netto    
                    // givenVolumeInt - objętość alkoholu w dm3 zaokrąglona do całości
                    // wartość potrzebna do obliczeń: volume1000kg => Obj. 1000kg alk. w 20ºC na podstawie talicy9b
                    AlcoholBoard board9b = new AlcoholBoard(realPower, 1000, fileName9b);
                    volume1000kg = board9b.vaule;
                    // na postawie (dm3 w 20ºC) i odczytu z tablicy 9b dla 1000kg i realPower  np. 28208 * (1000 / 1106,6) = 25606,39070442992 zaokrąglamy = 25606
                    double netWeight = (100000 / volume1000kg) * volumeOf100Percent;
                    netWeight = Math.round(netWeight);
                    netWeight = netWeight / 100;
                    jButton4.setText("" + netWeight);
                } else {
                    JOptionPane.showMessageDialog(null, "Niepoprawna wartość w polu '% vol. w 20ºC' powinna być w przedziale 80 -100");
                    jButton4.setText("");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "ogólny błąd");
                jButton4.setText("");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Liczba jest wymagana");
            jButton4.setText("");
        }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        jTextField2.setText("");
        jTextField3.setText("");
        jTextField4.setText("");
        jTextField5.setText("");
        jButton2.setText("");
        jButton3.setText("");
        jButton4.setText("");
        jButton5.setText("");
        jButton6.setText("");

    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Double readAlcoholPower7c = null;
        Double temperatureRead7c = null;
        String fileName7c = "dane/tablice7c.csv";
        if (jTextField1.getText() != null) {
            try {
                String tmp = jTextField1.getText().trim();
                String tmpPower = null;
                if (tmp.contains(",")) {
                    tmpPower = tmp.replace(",", ".");
                } else {
                    tmpPower = tmp;
                }
                if (tmpPower.matches("[7-9][0-9]\\.[0-9]|10[01]\\.[0-9]|[7-9]\\.[0-9]|10[01]|[7-9][0-9]")) {
                    readAlcoholPower7c = Double.parseDouble(tmpPower);
                } else {
                    jTextField1.setText("");
                    JOptionPane.showMessageDialog(null, "W polu 'mocy pozornej' podaj liczbę z zakresu 70-101,9 z dokładnością do 0,1");
                }
            } catch (NumberFormatException e) {
                jTextField1.setText("");
                JOptionPane.showMessageDialog(null, "Niepoprawna liczba w polu 'mocy pozornej'");
            }
        }
        if (jTextField6.getText() != null) {
            try {
                String tmp = jTextField6.getText().trim();
                String tmpTemp = null;
                if (tmp.contains(",")) {
                    tmpTemp = tmp.replace(",", ".");
                } else {
                    tmpTemp = tmp;
                }
                if (tmpTemp.matches("\\+?30|\\+?[12]?[0-9](\\.[05])?|\\-10(\\.0)?|\\-[0-9](\\.[05])?")) {
                    temperatureRead7c = Double.parseDouble(tmpTemp);
                } else {
                    jTextField6.setText("");
                    JOptionPane.showMessageDialog(null, "W polu 'temperatura zmierzona' podaj liczbę z zakresu -10 do +30 z dokładnością do 0,5");
                }
            } catch (NumberFormatException e) {
                jTextField6.setText("");
                JOptionPane.showMessageDialog(null, "Niepoprawna liczba w polu 'temperatura zmierzona'");
            }
        }
        if ((readAlcoholPower7c != null) && (temperatureRead7c != null)) {
            try {
                AlcoholBoard board7c = new AlcoholBoard(readAlcoholPower7c, temperatureRead7c, fileName7c);
                double score = board7c.vaule;
                jButton1.setText("" + score);

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "ogólny błąd");
                jButton1.setText("");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Liczba jest wymagana");
            jButton1.setText("");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        //waga brutto, tara i obliczona netto
        Integer grossWeightInt = null; // waga brutto
        Integer tareWeigthInt = null; // waga tara
        int calculatedNetWeight = 0; //waga netto = grossWeightInt - tareWeigthInt;
        if (jTextField7.getText() != null) {
            try {
                String tmp = jTextField7.getText().trim();
                if (tmp.matches("\\d+")) {
                    grossWeightInt = Integer.parseInt(tmp);
                } else {
                    jTextField7.setText("");
                    JOptionPane.showMessageDialog(null, "W polu 'Brutto' podaj liczbę całkowitą większą od 0");
                }
            } catch (NumberFormatException e) {
                jTextField7.setText("");
                JOptionPane.showMessageDialog(null, "Niepoprawna liczba w polu 'Brutto'");
            }
        }
        if (jTextField8.getText() != null) {
            try {
                String tmp = jTextField8.getText().trim();
                if (tmp.matches("\\d+")) {
                    tareWeigthInt = Integer.parseInt(tmp);
                } else {
                    jTextField8.setText("");
                    JOptionPane.showMessageDialog(null, "W polu 'Tara' podaj liczbę całkowitą większą od 0");
                }
            } catch (NumberFormatException e) {
                jTextField8.setText("");
                JOptionPane.showMessageDialog(null, "Niepoprawna liczba w polu 'Tara'");
            }
        }
        if ((grossWeightInt != null) && (tareWeigthInt != null)) {
            try {
                calculatedNetWeight = grossWeightInt - tareWeigthInt;
                if (calculatedNetWeight > 0) {
                    jButton7.setText("" + calculatedNetWeight);
                } else {
                    JOptionPane.showMessageDialog(null, "Pole 'Brutto' musi być większe od 'Tara'");
                    jButton7.setText("");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "ogólny błąd");
                jButton7.setText("");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Liczba jest wymagana");
            jButton7.setText("");
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        Double readAlcoholPower7c = null;
        Double temperatureRead7c = null;
        // Integer powerMeasuredInteger = null;
        double realPower = 0.0;
        String fileName7c = "dane/tablice7c.csv";
        if (jTextField1.getText() != null) {
            try {
                String tmp = jTextField1.getText().trim();
                String tmpPower = null;
                if (tmp.contains(",")) {
                    tmpPower = tmp.replace(",", ".");
                } else {
                    tmpPower = tmp;
                }
                if (tmpPower.matches("[7-9][0-9]\\.[0-9]|10[01]\\.[0-9]|[7-9]\\.[0-9]|10[01]|[7-9][0-9]")) {
                    readAlcoholPower7c = Double.parseDouble(tmpPower);
                } else {
                    jTextField1.setText("");
                    JOptionPane.showMessageDialog(null, "W polu 'mocy pozornej' podaj liczbę z zakresu 70-101,9 z dokładnością do 0,1");
                }
            } catch (NumberFormatException e) {
                jTextField1.setText("");
                JOptionPane.showMessageDialog(null, "Niepoprawna liczba w polu 'mocy pozornej'");
            }
        }
        if (jTextField6.getText() != null) {
            try {
                String tmp = jTextField6.getText().trim();
                String tmpTemp = null;
                if (tmp.contains(",")) {
                    tmpTemp = tmp.replace(",", ".");
                } else {
                    tmpTemp = tmp;
                }
                if (tmpTemp.matches("\\+?30|\\+?[12]?[0-9](\\.[05])?|\\-10(\\.0)?|\\-[0-9](\\.[05])?")) {
                    temperatureRead7c = Double.parseDouble(tmpTemp);
                } else {
                    jTextField6.setText("");
                    JOptionPane.showMessageDialog(null, "W polu 'temperatura zmierzona' podaj liczbę z zakresu -10 do +30 z dokładnością do 0,5");
                }
            } catch (NumberFormatException e) {
                jTextField6.setText("");
                JOptionPane.showMessageDialog(null, "Niepoprawna liczba w polu 'temperatura zmierzona'");
            }
        }
        if ((readAlcoholPower7c != null) && (temperatureRead7c != null)) {
            try {
                AlcoholBoard board7c = new AlcoholBoard(readAlcoholPower7c, temperatureRead7c, fileName7c);
                double score = board7c.vaule;
                jButton1.setText("" + score);

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "ogólny błąd");
                jButton1.setText("");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Liczba jest wymagana");
            jButton1.setText("");
        }
        if (jButton1.getText() != null) {
            try {
                // pobieramy moc rzeczywista obliczoną z tablicy 7c i zaokrągloną do całości
                //powerMeasuredInteger = (int) Math.round(Double.parseDouble(jButton1.getText()));
                // moc rzeczywista obliczoną z tablicy 7c i zaokrągloną do 0,1
                realPower = Double.parseDouble(jButton1.getText()) * 10;
                realPower = Math.round(realPower);
                realPower /= 10;  // tutaj podajemy moc alkoholu  co 0,1° od 80-100  np.93.7 

            } catch (NumberFormatException e) {
                jButton1.setText("");
                JOptionPane.showMessageDialog(null, "Niepoprawna liczba w polu '% vol. w 20ºC' powinna być w przedziale 80 -100");
            }
        }
        //waga brutto, tara i obliczona netto
        Integer grossWeightInt = null; // waga brutto
        Integer tareWeigthInt = null; // waga tara
        // tutaj wyliczamy wage alkoholu od 100 do 1000kg (co 10)   np. 620
        int calculatedNetWeight = 0; //waga netto = grossWeightInt - tareWeigthInt;
        if (jTextField7.getText() != null) {
            try {
                String tmp = jTextField7.getText().trim();
                if (tmp.matches("\\d+")) {
                    grossWeightInt = Integer.parseInt(tmp);
                } else {
                    jTextField7.setText("");
                    JOptionPane.showMessageDialog(null, "W polu 'Brutto' podaj liczbę całkowitą większą od 0");
                }
            } catch (NumberFormatException e) {
                jTextField7.setText("");
                JOptionPane.showMessageDialog(null, "Niepoprawna liczba w polu 'Brutto'");
            }
        }
        if (jTextField8.getText() != null) {
            try {
                String tmp = jTextField8.getText().trim();
                if (tmp.matches("\\d+")) {
                    tareWeigthInt = Integer.parseInt(tmp);
                } else {
                    jTextField8.setText("");
                    JOptionPane.showMessageDialog(null, "W polu 'Tara' podaj liczbę całkowitą większą od 0");
                }
            } catch (NumberFormatException e) {
                jTextField8.setText("");
                JOptionPane.showMessageDialog(null, "Niepoprawna liczba w polu 'Tara'");
            }
        }
        if ((grossWeightInt != null) && (tareWeigthInt != null)) {
            try {
                calculatedNetWeight = grossWeightInt - tareWeigthInt;
                if (calculatedNetWeight > 0) {
                    jButton7.setText("" + calculatedNetWeight);
                } else {
                    JOptionPane.showMessageDialog(null, "Pole 'Brutto' musi być większe od 'Tara'");
                    jButton7.setText("");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "ogólny błąd");
                jButton7.setText("");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Liczba jest wymagana");
            jButton7.setText("");
        }
        int auxiliaryVariable = 0; // zmienna pomocnicza do obliczeń
        double temporary = calculatedNetWeight; // tutaj podajemy wage alkoholu np. 620
        String nazwaPliku9b = "dane/tablice9b.csv";
        double[] array = new double[6]; // tablica przchowująca wagę netto rozbitą na wartości, aby odczytać z z tablicy 100 do 1000kg	
        double valueArray = 0.0; // wartosc wyliczona z tablicy9b

        if (temporary >= 100000 && temporary < 1000000) {
            auxiliaryVariable = (int) temporary / 10000;
            array[0] = 10 * auxiliaryVariable;
            AlcoholBoard tab0 = new AlcoholBoard(realPower, array[0], nazwaPliku9b);
            valueArray += tab0.vaule * 1000;
            temporary = temporary - array[0] * 1000;
            System.out.println("0 :  objetoscAlkoholu " + "wagaTemp[0]" + array[0] + "    " + valueArray);
        }
        if (temporary >= 10000) {
            auxiliaryVariable = (int) temporary / 1000;
            array[1] = 10 * auxiliaryVariable;
            AlcoholBoard tab0 = new AlcoholBoard(realPower, array[1], nazwaPliku9b);
            valueArray += tab0.vaule * 100;
            temporary = temporary - array[1] * 100;
            System.out.println("1 :  objetoscAlkoholu " + "wagaTemp[1]" + array[1] + "    " + valueArray);
        }
        if (temporary >= 1000) {
            auxiliaryVariable = (int) temporary / 100;
            array[2] = 10 * auxiliaryVariable;
            AlcoholBoard tab0 = new AlcoholBoard(realPower, array[2], nazwaPliku9b);
            valueArray += tab0.vaule * 10;
            temporary = temporary - array[2] * 10;
            System.out.println("2 :  objetoscAlkoholu " + "wagaTemp[2]" + array[2] + "    " + valueArray);
        }
        if (temporary >= 100) {
            auxiliaryVariable = (int) temporary / 10;
            array[3] = 10 * auxiliaryVariable;
            AlcoholBoard tab0 = new AlcoholBoard(realPower, array[3], nazwaPliku9b);
            valueArray += tab0.vaule * 1;
            temporary = temporary - array[3] * 1;
            System.out.println("3 :  objetoscAlkoholu " + "wagaTemp[3]" + array[3] + "    " + valueArray);
        }
        if (temporary >= 10) {
            auxiliaryVariable = (int) temporary / 1;
            array[4] = 10 * auxiliaryVariable;
            AlcoholBoard tab0 = new AlcoholBoard(realPower, array[4], nazwaPliku9b);
            valueArray += tab0.vaule * 0.1;
            temporary = temporary - array[4] * 0.1;
            System.out.println("4 :  objetoscAlkoholu " + "wagaTemp[4]" + array[4] + "    " + valueArray);
        }
        if (temporary >= 1) {
            auxiliaryVariable = (int) temporary * 10;
            array[5] = 10 * auxiliaryVariable;
            AlcoholBoard tab0 = new AlcoholBoard(realPower, array[5], nazwaPliku9b);
            valueArray += tab0.vaule * 0.01;
            System.out.println("5 :  objetoscAlkoholu " + "wagaTemp[5]" + array[5] + "    " + valueArray);
        }
        System.out.println("5 :  objetoscAlkoholu " + valueArray);
        // wyliczenie objętości spirytusu 100% i objętości w 20 stopniach 
        int volumeOf100PercentWegthInt = (int) Math.round(valueArray);
        double volumeIn20DegreesWegth = Math.round(10000.0 * volumeOf100PercentWegthInt / realPower);
        volumeIn20DegreesWegth /= 100;
        jButton8.setText("" + volumeIn20DegreesWegth);
        jButton9.setText("" + volumeOf100PercentWegthInt);
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        jTextField1.setText("");
        jTextField6.setText("");
        jTextField7.setText("");
        jTextField8.setText("");
        jButton1.setText("");
        jButton7.setText("");
        jButton8.setText("");
        jButton9.setText("");
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        JOptionPane.showMessageDialog(null, "1. Instalacja:"+"\n   skopiować folder Alkohol2 na dysk w miejsce docelowe"
        +"\n2. Uruchomienie programu:"+"\n   za pomocą polecenia wewnątrz folderu alkohol2: java -jar dist\\alcohol2.jar"
        +"\n   lub za pomocą pliku wsadowego alkohol2.bat"+"\n3. Mamy dwie metody wyboru obliczeń alkoholu:"
        +"\n   - Obliczania alkoholu metodą objętościową"+"\n   - Obliczania alkoholu metodą wagową"
        +"\n4. W formularzu z metody objętościowej uzupełniamy pola:"+"\n   - Moc pozorna              (zakres pola 70 do 101,9 co 0,1)"
        +"\n   - Temperatura zmierzona    (zakres -10 do 30ºC co 0,5ºC)"+"\n   - dm3                      (objętość liczba >0)"
        +"\n   - Temperatura w zbiorniku  (zakres -10 do 30ºC co 0,5ºC)"+"\n5. W formularzu z metody wagowej uzupełniamy pola:"
        +"\n   - Moc pozorna              (zakres pola 70 do 101,9 co 0,1)"+"\n   - Temperatura zmierzona    (zakres -10 do 30ºC co 0,5ºC)"
        +"\n   - brutto                   (waga brutto liczba całkowita >0)"+"\n   - tara                     (waga tara liczba całkowita >0 i <brutto)"
        +"\n6. Po naciśnięciu przycisku <Oblicz> w tabeli pojawią się wyliczone wartości."
        +"\n7. Po naciśnięciu przycisku <Wyczyść> wszystkie pola z wpisanymi wartościami zostana wyczyszczone."
        +"\n   Można ponownie wpisywać nowe wartości (patrz p.3-6).");
        
        
    }//GEN-LAST:event_jButton14ActionPerformed

    /**
     * @param args the command line arguments
     */
    //   public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new NewJFrame().setVisible(true);
//            }
//        });
    //  }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    // End of variables declaration//GEN-END:variables
}
